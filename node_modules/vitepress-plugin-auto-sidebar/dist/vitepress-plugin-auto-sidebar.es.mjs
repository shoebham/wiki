import a from "fs";
import d from "path";
function u(e, r, f, t) {
  return e.filter((l) => l.endsWith(".md") || a.statSync(d.resolve(r ?? "/", l)).isDirectory()).map((l) => {
    const c = d.resolve(r ?? "/", l);
    if (a.statSync(c).isDirectory()) {
      const m = u(a.readdirSync(c), c, f, t), n = l.split("/").pop() ?? "";
      return m.length ? {
        text: (n.charAt(0).toUpperCase() + n.slice(1)).replaceAll("-", " "),
        collapsible: t.collapsible,
        collapsed: t.collapsed,
        items: m
      } : null;
    } else if (l.endsWith(".md") && l[0] !== "_")
      return {
        text: (l.charAt(0).toUpperCase() + l.slice(1)).slice(0, -3).replaceAll("-", " "),
        link: c.replace(f ?? "", "")
      };
    return null;
  }).filter((l) => !!l);
}
function b(e = {}) {
  var r;
  return e.contentRoot = (e == null ? void 0 : e.contentRoot) ?? "/", e.contentDirs = (r = e == null ? void 0 : e.contentDirs) != null && r.length ? e.contentDirs : ["/"], e.collapsible = (e == null ? void 0 : e.collapsible) ?? !0, e.collapsed = (e == null ? void 0 : e.collapsed) ?? !0, e.contentRoot = d.join(process.cwd(), e.contentRoot), u(e.contentDirs, e.contentRoot, e.contentRoot, e);
}
export {
  b as getSidebar
};
